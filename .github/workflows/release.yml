name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.21'
    
    - name: Run tests
      run: go test -v ./...
    
    - name: Get version
      id: version
      run: echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
    
    - name: Build binaries
      run: |
        # Build for multiple platforms
        GOOS=linux GOARCH=amd64 go build -ldflags "-X main.version=${{ steps.version.outputs.version }}" -o gomail-linux-amd64 ./cmd/mailserver
        GOOS=linux GOARCH=arm64 go build -ldflags "-X main.version=${{ steps.version.outputs.version }}" -o gomail-linux-arm64 ./cmd/mailserver
        GOOS=darwin GOARCH=amd64 go build -ldflags "-X main.version=${{ steps.version.outputs.version }}" -o gomail-darwin-amd64 ./cmd/mailserver
        GOOS=darwin GOARCH=arm64 go build -ldflags "-X main.version=${{ steps.version.outputs.version }}" -o gomail-darwin-arm64 ./cmd/mailserver
        
        # Create checksums
        sha256sum gomail-* > checksums.txt
    
    - name: Create systemd service file
      run: |
        cat > gomail.service << 'EOF'
        [Unit]
        Description=GoMail Server
        After=network.target
        
        [Service]
        Type=simple
        User=gomail
        Group=gomail
        EnvironmentFile=/etc/sysconfig/gomail
        ExecStart=/usr/local/bin/gomail server --config /dev/null
        Restart=on-failure
        RestartSec=5
        
        # Security hardening
        NoNewPrivileges=true
        PrivateTmp=true
        ProtectSystem=strict
        ProtectHome=true
        ReadWritePaths=/opt/gomail/data
        
        [Install]
        WantedBy=multi-user.target
        EOF
    
    - name: Create installation scripts
      run: |
        # Copy quickinstall script
        cp scripts/quickinstall.sh quickinstall.sh
        chmod +x quickinstall.sh
        
        # Create simple install script
        cat > install.sh << 'EOF'
        #!/bin/bash
        set -e
        
        # Detect architecture
        ARCH=$(uname -m)
        OS=$(uname -s | tr '[:upper:]' '[:lower:]')
        
        case "$ARCH" in
          x86_64) ARCH="amd64" ;;
          aarch64) ARCH="arm64" ;;
        esac
        
        BINARY="gomail-${OS}-${ARCH}"
        
        echo "Installing GoMail for ${OS}-${ARCH}..."
        
        # Download binary
        wget -q "https://github.com/grumpyguvner/gomail/releases/latest/download/${BINARY}"
        chmod +x "${BINARY}"
        sudo mv "${BINARY}" /usr/local/bin/gomail
        
        echo "GoMail installed successfully!"
        echo "Run 'sudo gomail quickstart' to complete setup"
        EOF
        chmod +x install.sh
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        draft: false
        prerelease: false
        name: GoMail ${{ steps.version.outputs.version }}
        body: |
          ## GoMail ${{ steps.version.outputs.version }}
          
          ### Installation
          
          #### One-Line Install (Recommended)
          ```bash
          # Replace example.com with your domain
          curl -sSL https://github.com/grumpyguvner/gomail/releases/latest/download/quickinstall.sh | sudo bash -s example.com
          ```
          
          #### Alternative Install
          ```bash
          # Download and run interactive setup
          curl -sSL https://github.com/grumpyguvner/gomail/releases/latest/download/install.sh | bash
          sudo gomail quickstart
          ```
          
          #### Manual Installation
          1. Download the appropriate binary for your platform
          2. Make it executable: `chmod +x gomail-*`
          3. Move to PATH: `sudo mv gomail-* /usr/local/bin/gomail`
          4. Run setup: `sudo gomail quickstart`
          
          ### Features
          - Single binary mail server solution
          - Postfix integration
          - HTTP API for email forwarding
          - SPF/DKIM/DMARC metadata extraction
          - Multi-domain support
          
          ### Checksums
          See `checksums.txt` for SHA256 checksums of all binaries.
          
        files: |
          gomail-linux-amd64
          gomail-linux-arm64
          gomail-darwin-amd64
          gomail-darwin-arm64
          checksums.txt
          gomail.service
          install.sh
          quickinstall.sh
          example.mailserver.yaml